Source: nagios-plugin-check-logfiles
Section: net
Priority: extra
Maintainer: Gerhard Laußer <gerhard.lausser@consol.de>
Build-Depends: debhelper (>=9)
Standards-Version: 3.9.6
Homepage: https://labs.consol.de/nagios/check_logfiles/
#Vcs-Git: git://anonscm.debian.org/collab-maint/sg-tomcat.git
#Vcs-Browser: https://anonscm.debian.org/cgit/collab-maint/sg-tomcat.git

Package: nagios-plugin-check-logfiles
Architecture: all
Depends: ${misc:Depends} ${perl:Depends}
Description: Nagios plugin check_logfiles
 check_logfiles is a Plugin for Nagios which scans log files for specific patterns.
 Features:
 - Detection of rotations - usually nightly logfiles are rotated and
   compressed. Each operating system or company has it’s own naming
   scheme. If this rotation is done between two runs of check_logfiles
   also the rotated archive has to be scanned to avoid gaps. The most
   common rotation schemes are predefined but you can describe any
   strategy (shortly: where and under which name is a logfile
   archived).
 - More than one pattern can be defined which again can be classified
   as warning patterns and critical patterns.
 - Triggered actions - Usually nagios plugins return just an exit code
   and a line of text, describing the result of the check. Sometimes,
   however, you want to run some code during the scan every time you
   got a hit. Check_logfiles lets you call scripts either after every
   hit or at the beginning or the end of it’s runtime.
 - Exceptions - If a pattern matches, the matched line could be a very
   special case which should not be counted as an error. You can
   define exception patterns which are more specific versions of your
   critical/warning patterns. Such a match would then cancel an alert.
 - Thresholds - You can define the number of matching lines which are
   necessary to activate an alert.
 - Protocol - The matching lines can be written to a protocol file the
   name of which will be included in the plugin’s output.
 - Macros - Pattern definitions and logfile names may contain macros,
   which are resolved at runtime.
 - Performance data - The number of lines scanned and the number of
   warnings/criticals is output.
 - Windows - The plugin works with Unix as well as with Windows
   (e.g. with ActiveState Perl).